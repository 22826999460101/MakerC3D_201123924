package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER,
                  or_,and_,not_,mayorigual,menorigual,mayor,menor,igualacion,distinto;
nonterminal NodoC3D inicial, expresion;


precedence left or_,and_,not_;
precedence left igualacion,distinto;
precedence left mayor, menor,mayorigual,menorigual;

precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT; 

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} expresion:exp 
                    {: 
                        RESULT = exp;
                        ControlC3D.agregarC3D("//ETIQUETAS VERDADERAS-->: " + exp.getEtqv()+"\n");
                        ControlC3D.agregarC3D("//ETIQUETAS FALSAS-->: " + exp.getEtqf()+"\n");
                    :};

expresion   ::= expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq or_ {: ControlC3D.agregarC3D(izq.getEtqf()+": \n"); :}  expresion:der
                    {: 
                        NodoC3D salida = new NodoC3D();
                        salida.setEtqv(izq.getEtqv()+" , "+der.getEtqv());
                        salida.setEtqf(der.getEtqf());                        
                        RESULT = salida;                         
                    :}
            |   expresion:izq and_ {: ControlC3D.agregarC3D(izq.getEtqv()+": \n"); :} expresion:der
                    {: 
                        NodoC3D salida = new NodoC3D();
                        salida.setEtqv(der.getEtqv());
                        salida.setEtqf(izq.getEtqf()+" , "+der.getEtqf());                        
                        RESULT = salida;  
                    :}
            |   expresion:izq mayorigual expresion:der
                    {: 
                        /*
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " && " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                        */
                        String etqv = ControlC3D.generaTemp();
                        String etqf = ControlC3D.generaTemp();                        
                        String c3d =  "if "+izq.getCad() + " >= " + der.getCad() +" then goto "
                                      + etqv +"\ngoto " +etqf+"\n";
                        ControlC3D.agregarC3D(c3d);
                        NodoC3D salida = new NodoC3D();
                        salida.setEtqv(etqv);
                        salida.setEtqf(etqf);
                        RESULT = salida; 
                    :}
            |   expresion:izq menorigual expresion:der
                    {: 
                        /*
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " && " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                        */
                        String etqv = ControlC3D.generaTemp();
                        String etqf = ControlC3D.generaTemp();                        
                        String c3d =  "if "+izq.getCad() + " <= " + der.getCad() +" then goto "
                                      + etqv +"\ngoto " +etqf+"\n";
                        ControlC3D.agregarC3D(c3d);
                        NodoC3D salida = new NodoC3D();
                        salida.setEtqv(etqv);
                        salida.setEtqf(etqf);
                        RESULT = salida;  
                    :}
            |   expresion:izq mayor expresion:der
                    {: 
                        String etqv = ControlC3D.generaTemp();
                        String etqf = ControlC3D.generaTemp();                        
                        String c3d =  "if "+izq.getCad() + " > " + der.getCad() +" then goto "
                                      + etqv +"\ngoto " +etqf+"\n";
                        ControlC3D.agregarC3D(c3d);
                        NodoC3D salida = new NodoC3D();
                        salida.setEtqv(etqv);
                        salida.setEtqf(etqf);
                        RESULT = salida;
                    :}
            |   expresion:izq menor expresion:der
                    {: 
                        String etqv = ControlC3D.generaTemp();
                        String etqf = ControlC3D.generaTemp();                        
                        String c3d =  "if "+izq.getCad() + " < " + der.getCad() +" then goto "
                                      + etqv +"\ngoto " +etqf+"\n";
                        ControlC3D.agregarC3D(c3d);
                        NodoC3D salida = new NodoC3D();
                        salida.setEtqv(etqv);
                        salida.setEtqf(etqf);
                        RESULT = salida;
                    :}
            |   expresion:izq igualacion expresion:der
                    {: 
                        String etqv = ControlC3D.generaTemp();
                        String etqf = ControlC3D.generaTemp();                        
                        String c3d =  "if "+izq.getCad() + " == " + der.getCad() +" then goto "
                                      + etqv +"\ngoto " +etqf+"\n";
                        ControlC3D.agregarC3D(c3d);
                        NodoC3D salida = new NodoC3D();
                        salida.setEtqv(etqv);
                        salida.setEtqf(etqf);
                        RESULT = salida;
                    :}
            |   expresion:izq distinto expresion:der
                    {: 
                        String etqv = ControlC3D.generaTemp();
                        String etqf = ControlC3D.generaTemp();                        
                        String c3d =  "if "+izq.getCad() + " != " + der.getCad() +" then goto "
                                      + etqv +"\ngoto " +etqf +"\n";
                        ControlC3D.agregarC3D(c3d);
                        NodoC3D salida = new NodoC3D();
                        salida.setEtqv(etqv);
                        salida.setEtqf(etqf);
                        RESULT = salida;
                    :}
       
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
             |   not_ expresion:exp 
                    {: /*
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = ! " + exp.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 

                        String etqv = ControlC3D.generaTemp();
                        String etqf = ControlC3D.generaTemp();                        
                        String c3d =  "if "+izq.getCad() + " <= " + der.getCad() +" then goto "
                                      + etqv +"\ngoto" +etqf;
                        ControlC3D.agregarC3D(c3d);*/

                        NodoC3D salida = new NodoC3D();
                        salida.setEtqv(exp.getEtqf());
                        salida.setEtqf(exp.getEtqv());
                        RESULT = salida;
                    :}

            |   PAR_IZQ expresion:exp PAR_DER   
                    {: RESULT = exp; :}
            |   ID:id           
                    {: RESULT = new NodoC3D(id); :}
            |   ENTERO:entero   
                    {: RESULT = new NodoC3D(entero); :}
            |   DECIMAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            ;